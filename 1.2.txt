1.2 时光穿梭机
要随时掌握工作区的状态，使用git status命令。
如果git status告诉你有文件被修改过，用git diff可以查看修改内容。
     git status
     git diff ...

1.2.1版本回退
HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。（在Git中，用HEAD表示当前版本，也就是最新的提交1094adb...（注意我的提交ID和你的肯定不一样），上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。）若命令窗口没关，可以用ID找回
     git reset --hard HEAD^
     git reset --hard ee372
 
穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。如果嫌输出信息太多，看得眼花缭乱的，可以试试加上--pretty=oneline参数
     git log
     git log --pretty=oneline
 
要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。
     git reflog

1.2.2工作区和暂存区
Git add 是把文件放到暂存区
Git commit -m “ ”是把暂存区的文件提交到分支
1.2.3管理修改
Git管理的是修改，每一次都要Git add
1.2.4撤销修改
场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
     git checkout --...

场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。
     git reset HEAD ...
     git checkout -- ...
  
场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。
1.2.5删除文件
一般情况下，你通常直接在文件管理器中把没用的文件删了，或者用rm命令删了：
     rm ...

这个时候，Git知道你删除了文件，因此，工作区和版本库就不一致了，git status命令会立刻告诉你哪些文件被删除了：
     git status

现在你有两个选择，一是确实要从版本库中删除该文件，那就用命令git rm删掉，并且git commit：
     git rm ...
     git commit -m "..."

另一种情况是删错了，因为版本库里还有呢，所以可以很轻松地把误删的文件恢复到最新版本：
     git checkout -- ...
 
